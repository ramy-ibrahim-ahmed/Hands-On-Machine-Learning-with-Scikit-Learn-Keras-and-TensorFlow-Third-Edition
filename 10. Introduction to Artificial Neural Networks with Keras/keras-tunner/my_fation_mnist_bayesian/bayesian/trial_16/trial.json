{"trial_id": "16", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "n_hidden", "default": 7, "conditions": [], "min_value": 5, "max_value": 15, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "n_neurons", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.0001, "conditions": [], "min_value": 0.0001, "max_value": 0.01, "step": null, "sampling": "log"}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "sgd", "conditions": [], "values": ["sgd", "adam"], "ordered": false}}, {"class_name": "Boolean", "config": {"name": "normalize", "default": false, "conditions": []}}], "values": {"n_hidden": 15, "n_neurons": 32, "learning_rate": 0.0001, "optimizer": "adam", "normalize": true}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"d:\\Alien X\\Machine learning\\hands on machine learning\\10. Introduction to Artificial Neural Networks with Keras\\keras-tunner\\bayesian.py\", line 58, in fit\n    return NET.fit(x, y, batch_size=batch_size, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 123, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\keras\\src\\trainers\\data_adapters\\array_data_adapter.py\", line 95, in __init__\n    self._size = int(math.ceil(num_samples / batch_size))\n                               ~~~~~~~~~~~~^~~~~~~~~~~~\nTypeError: unsupported operand type(s) for /: 'int' and 'str'\n"}